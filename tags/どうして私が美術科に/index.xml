<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>どうして私が美術科に on 正弦工社</title>
    <link>https://Seigenkousya.github.io/tags/%E3%81%A9%E3%81%86%E3%81%97%E3%81%A6%E7%A7%81%E3%81%8C%E7%BE%8E%E8%A1%93%E7%A7%91%E3%81%AB/</link>
    <description>Recent content in どうして私が美術科に on 正弦工社</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 21 Dec 2019 23:40:35 +0900</lastBuildDate>
    
	<atom:link href="https://Seigenkousya.github.io/tags/%E3%81%A9%E3%81%86%E3%81%97%E3%81%A6%E7%A7%81%E3%81%8C%E7%BE%8E%E8%A1%93%E7%A7%91%E3%81%AB/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>桃音ちゃんのAAの形をした桃音ちゃんのAAの形をした桃音ちゃんのAAの形をした...桃音ちゃんのAAを出力するプログラム</title>
      <link>https://Seigenkousya.github.io/post/momone_aa/</link>
      <pubDate>Sat, 21 Dec 2019 23:40:35 +0900</pubDate>
      
      <guid>https://Seigenkousya.github.io/post/momone_aa/</guid>
      <description>この記事は「まんがタイムきらら Advent Calendar 2019」の23日目の記事にして13日目のオマケ記事です。
プログラムの見た目自体は変わってないので伝わり辛いでしょうがお付き合いください。
前回のあらすじ 精神を病んで桃音ちゃん型のプログラムを書いた。
しかし、プログラムの内容はFizzBuzzという相崎先生に申し訳ないレベルの簡単なプログラム。
もっと、見た人がおぉってなるようなプログラムにしたい。（あと、しょうもないコメントを使った手法から脱却したい）
今回のあらすじ 出力自体も桃音ちゃんだったらめっちゃエモく無いですか？（唐突な思いつき）
いっそのこと自己参照型のプログラムにしたら良さそう（これをQuine1と言います）。
そんなこんな今回も気合で書いていきます。
環境 前回に引き続きPerlで。
$ uname -a Linux kali 4.18.0-kali2-amd64 #1 SMP Debian 4.18.10-2kali1 (2018-10-09) x86_64 GNU/Linux $ perl --version This is perl 5, version 28, subversion 1 (v5.28.1) built for x86_64-linux-gnu-thread-multi Quineとは？ wikiの説明を借りると、
 クワイン（英: Quine）は、コンピュータプログラムの一種で、自身のソースコードと完全に同じ文字列を出力するプログラムである。
 要はプログラムと出力がまったく等しいプログラムのことです。
perlでいうとこう。
$_=q{print&amp;#34;\$_=q{$_};eval&amp;#34;};eval 実際に確かめてみると、
$ perl -E &#39;$_=q{print&amp;quot;\$_=q{$_};eval&amp;quot;};eval&#39; $_=q{print&amp;quot;\$_=q{$_};eval&amp;quot;};eval たしかに入力と出力が一致する。
これは、
 暗黙変数$_にq{print&amp;quot;\$\_=q{$_};eval&amp;quot;}を代入する   evalが実行される evalは暗黙的に$_を参照するのでq{print&amp;quot;\$_=q{$_};eval&amp;quot;}がevalに渡される q演算子q//より、文字列print&amp;quot;\$_=q{$_};eval&amp;quot;が渡されることになる evalに渡されるprint&amp;quot;\$_=q{$_};eval&amp;quot;のうち、エスケープされていないq{$_}の部分の$_は最初に代入したq{print&amp;quot;\$\_=q{$_};eval&amp;quot;}になるので 標準出力に$_=q{print&amp;quot;\$_=q{$_};eval&amp;quot;};evalが出力される  という流れで実行されるからです。</description>
    </item>
    
    <item>
      <title>世界一かわいいプログラムを書こう</title>
      <link>https://Seigenkousya.github.io/post/momone_fizzbuzz/</link>
      <pubDate>Fri, 06 Dec 2019 23:07:49 +0900</pubDate>
      
      <guid>https://Seigenkousya.github.io/post/momone_fizzbuzz/</guid>
      <description>この記事は「まんがタイムきらら Advent Calendar 2019」の13日目の記事です。
注意 この記事の元となるプログラムは今年の2月のMAXの発売日の直後という僕史上最もメンタルがイカれていた時期に書かれたものです。
狂気的な内容ではございますがお付き合いください。
はじめに みなさんプログラム書きます？
まぁ書いたこと無い人もいれば自作言語をガンガン開発している人もいるでしょう（多分）
プログラムっていうのはこんな奴です。（ねねっちが3Tab派の変態プログラマーって本当何ですか？）
プログラムには美しいプログラムとそうでないプログラムがあります。
美しいプログラムというのは要は誰が見ても内容を理解しやすく見やすいプログラムです。これが書ける人はちやほやされます。
逆に読みづらいプログラムは内容が理解しづらかったり、後で修正するのが面倒だったりもうそれは大変です。
あるとき僕は考えました。この世に美しいプログラムやカッコいいプログラムがあっても、見ていて癒されるかわいいプログラムは無いなぁと。
プログラムを書いているときに思うように動かなければ心が荒みます。
しかし、そのプログラム自体が美少女だったらどうでしょう。自然と笑顔を取り戻すことができるはずです。
そして、当時の僕にはもう一つこのかわいいプログラムを書かねばならない理由がありました。
それがこちらです。
【おしらせ】本日2月19日発売のまんがタイムきららMAXに「どうして私が美術科に!?」38話目載せてもらっています。
そして次号、最終話です。 pic.twitter.com/Ars5radT6o
&amp;mdash; 相崎うたう@きららMAXゲスト (@py_py_ai) February 19, 2019  僕のQiitaの記事を読んだことのある人ならお分かりでしょうが、僕はこの出来事に大きなショックを受け1月半以上家に引きこもっていました。
不眠と嘔吐に耐えながら僕はプログラムに打ち込むことで気を紛らわせていました。
当時の僕には癒されるプログラムが、心の支えが必要だったのです。
そんなこんなで非常に不純な理由で僕はこのプログラムを書き始めたのです。1
用意するもの  かわいいsomething 技術力 精神力 半ば狂気ともいえる執念  世界一かわいいプログラムを書くには世界一かわいい美少女が必要です。
僕にとっては「どうして私が美術科に！？」2の酒井桃音ちゃんだったので（ももきなをすこれ）桃音ちゃんの力を借りてプログラムを書こうと思います。
モデルにするイラストは以下。
【おしらせ】11月19日発売のまんがタイムきららMAXに「どうして私が美術科に!?」11話目載せてもらっています。初めての合同制作、ということでグループ名からどんな作品を作るのかまで悩みっぱなしな回です。そしてセンターカラーを頂いた来月号にお話は続きます。よろしくお願いします！ pic.twitter.com/4GxWCpKfDh
&amp;mdash; 相崎うたう@きららMAXゲスト (@py_py_ai) November 19, 2016  か゛わ゛い゛い゛な゛ぁ゛桃゛音゛ち゛ゃ゛ん゛
ちなみにこの号の予告絵（桃音）と次号の予告絵（黄奈子）がつながっていてヤバみがヤバい（僕はこれで1000回死んだ）
どうびじゅについて語ると世界中のリソースを使い尽くしても語りきれないので省略しますが、賢明な読者諸氏なら既にご存知でしょう。
環境 一応技術記事らしく。
$ uname -a Linux kali 4.18.0-kali2-amd64 #1 SMP Debian 4.18.10-2kali1 (2018-10-09) x86_64 GNU/Linux $ perl --version This is perl 5, version 28, subversion 1 (v5.</description>
    </item>
    
  </channel>
</rss>